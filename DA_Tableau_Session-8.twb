<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <CustomReferenceLineTooltips />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='FER_Line' datatype='datetime' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2022-07-18 20:29:22#'>
        <calculation class='tableau' formula='#2022-07-18 20:29:22#' />
      </column>
      <column caption='Ref_Line2' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='100000.'>
        <calculation class='tableau' formula='100000.' />
      </column>
      <column caption='Sub-Category Parameter' datatype='string' name='[Sub-Category Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Copiers&quot;'>
        <calculation class='tableau' formula='&quot;Copiers&quot;' />
        <members>
          <member value='&quot;Accessories&quot;' />
          <member value='&quot;Appliances&quot;' />
          <member value='&quot;Art&quot;' />
          <member value='&quot;Binders&quot;' />
          <member value='&quot;Bookcases&quot;' />
          <member value='&quot;Chairs&quot;' />
          <member value='&quot;Copiers&quot;' />
          <member value='&quot;Envelopes&quot;' />
          <member value='&quot;Fasteners&quot;' />
          <member value='&quot;Furnishings&quot;' />
          <member value='&quot;Labels&quot;' />
          <member value='&quot;Machines&quot;' />
          <member value='&quot;Paper&quot;' />
          <member value='&quot;Phones&quot;' />
          <member value='&quot;Storage&quot;' />
          <member value='&quot;Supplies&quot;' />
          <member value='&quot;Tables&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Orders (Sample_Superstore)' inline='true' name='federated.0lcievn1yr3erk0zj4e7r1lfzuzm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample_Superstore' name='excel-direct.1dw7vk01mxlmcl1dvs23h06bkflg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/fatih/IT/DATA_ANALYSIS/Tableau/Sample_Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1dw7vk01mxlmcl1dvs23h06bkflg' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1dw7vk01mxlmcl1dvs23h06bkflg' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_880C3E0248AB4939AC61FB7E510FBD18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit per City (incl)' datatype='real' name='[Calculation_3087639814372765696]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [City] : SUM([Profit])  }' />
      </column>
      <column caption='Sales per Customer(incl)' datatype='real' name='[Calculation_3087639814377119745]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE([Customer Name]) : SUM([Sales])}' />
      </column>
      <column aggregation='Attribute' caption='Sales per State(excl city)' datatype='real' name='[Calculation_3087639814378950658]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ EXCLUDE([City]) : SUM([Sales]) }' />
      </column>
      <column caption='Profit per Country(fixed)' datatype='real' name='[Calculation_3087639814381973508]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED([Country/Region]) : SUM([Profit]) }' />
      </column>
      <column caption='Grand Total(fixed)' datatype='real' name='[Calculation_3087639814387834885]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED  : SUM([Sales]) }' />
      </column>
      <column caption='Selected Sales' datatype='real' name='[Calculation_3087639814391980038]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Sub-Category] = [Parameters].[Sub-Category Parameter] THEN [Sales]&#10;ELSE 0&#10;END' />
      </column>
      <column aggregation='Attribute' caption='Sales of Selected' datatype='real' name='[Calculation_3087639814393270279]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ EXCLUDE [Sub-Category] : SUM([Calculation_3087639814391980038])}' />
      </column>
      <column caption='Difference from Selected' datatype='real' name='[Calculation_3087639814394634248]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales]) - sum([Calculation_3087639814393270279])' />
      </column>
      <column caption='Difference fr Selected(fixed)' datatype='real' name='[Calculation_3087639814396080137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED : SUM([Calculation_3087639814391980038]) }' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_880C3E0248AB4939AC61FB7E510FBD18]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Map'>
          <field>[Country/Region]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Sub-Category Parameter' datatype='string' name='[Sub-Category Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Copiers&quot;'>
          <calculation class='tableau' formula='&quot;Copiers&quot;' />
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{601a0a2c-d8a4-4e00-a016-d016c7f48393}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_880C3E0248AB4939AC61FB7E510FBD18'>
            <properties context=''>
              <relation connection='excel-direct.1dw7vk01mxlmcl1dvs23h06bkflg' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Clustering'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample_Superstore)' name='federated.0lcievn1yr3erk0zj4e7r1lfzuzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0lcievn1yr3erk0zj4e7r1lfzuzm'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{601a0a2c-d8a4-4e00-a016-d016c7f48393}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:AdhocCluster:1:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Category:nk] / [federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Sub-Category:nk])</rows>
        <cols>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{6E944960-018A-4CE6-9A68-B06F84CA5921}' />
    </worksheet>
    <worksheet name='Constant Line'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample_Superstore)' name='federated.0lcievn1yr3erk0zj4e7r1lfzuzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0lcievn1yr3erk0zj4e7r1lfzuzm'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-orientation' id='refline0' value='-90' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#941751' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Forecast Indicator:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[tmn:Order Date:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='computation' scope='per-cell' value='#2018-05-17 00:00:00#' value-column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[tmn:Order Date:qk]' z-order='1' />
            <reference-line axis-column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[tmn:Order Date:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='#2018-01-01 00:00:00#' value-column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[tmn:Order Date:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[fVal:sum:Sales:qk]</rows>
        <cols>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[tmn:Order Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{F7C2C47E-AE9C-4B42-96E8-654852F9DC3E}' />
    </worksheet>
    <worksheet name='EXCLUDE'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample_Superstore)' name='federated.0lcievn1yr3erk0zj4e7r1lfzuzm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0lcievn1yr3erk0zj4e7r1lfzuzm'>
            <column aggregation='Attribute' caption='Sales per State(excl city)' datatype='real' name='[Calculation_3087639814378950658]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ EXCLUDE([City]) : SUM([Sales]) }' />
            </column>
            <column caption='SUM([Sales]) / ATTR([Sales per State(excl city)])' datatype='real' name='[Calculation_3087639814380429315]' role='measure' type='quantitative' user:unnamed='EXCLUDE'>
              <calculation class='tableau' formula='SUM([Sales]) / ATTR([Calculation_3087639814378950658])' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3087639814380429315]' derivation='User' name='[usr:Calculation_3087639814380429315:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Latitude (generated)]' field-type='quantitative' max='8355669.7750415802' min='-708712.97109304834' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)]' field-type='quantitative' max='-511859.543049898' min='-14610835.465230634' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='1' field='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)]' field-type='quantitative' fold='true' max='-511859.543049898' min='-14610835.465230634' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[usr:Calculation_3087639814380429315:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[usr:Calculation_3087639814380429315:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Country/Region:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:State:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[usr:Calculation_3087639814380429315:qk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Country/Region:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:State:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:City:nk]' />
              <tooltip column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Country/Region:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:State:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Latitude (generated)]</rows>
        <cols>([federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)] + [federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{5A612BD3-BA15-4B69-B225-DC460B700694}' />
    </worksheet>
    <worksheet name='Examp-1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample_Superstore)' name='federated.0lcievn1yr3erk0zj4e7r1lfzuzm' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Sub-Category Parameter' datatype='string' name='[Sub-Category Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Copiers&quot;'>
              <calculation class='tableau' formula='&quot;Copiers&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lcievn1yr3erk0zj4e7r1lfzuzm'>
            <column caption='Selected Sales' datatype='real' name='[Calculation_3087639814391980038]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Sub-Category] = [Parameters].[Sub-Category Parameter] THEN [Sales]&#10;ELSE 0&#10;END' />
            </column>
            <column aggregation='Attribute' caption='Sales of Selected' datatype='real' name='[Calculation_3087639814393270279]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ EXCLUDE [Sub-Category] : SUM([Calculation_3087639814391980038])}' />
            </column>
            <column caption='Difference from Selected' datatype='real' name='[Calculation_3087639814394634248]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales]) - sum([Calculation_3087639814393270279])' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3087639814393270279]' derivation='Attribute' name='[attr:Calculation_3087639814393270279:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3087639814391980038]' derivation='Sum' name='[sum:Calculation_3087639814391980038:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3087639814394634248]' derivation='User' name='[usr:Calculation_3087639814394634248:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Calculation_3087639814391980038:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[attr:Calculation_3087639814393270279:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[usr:Calculation_3087639814394634248:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Sub-Category:nk]</rows>
        <cols>([federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk] + ([federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Calculation_3087639814391980038:qk] + ([federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[attr:Calculation_3087639814393270279:qk] + [federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[usr:Calculation_3087639814394634248:qk])))</cols>
      </table>
      <simple-id uuid='{9E0BFD5A-9A38-41EA-94AF-4C586DD3882F}' />
    </worksheet>
    <worksheet name='Examp-1()'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample_Superstore)' name='federated.0lcievn1yr3erk0zj4e7r1lfzuzm' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Sub-Category Parameter' datatype='string' name='[Sub-Category Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Copiers&quot;'>
              <calculation class='tableau' formula='&quot;Copiers&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lcievn1yr3erk0zj4e7r1lfzuzm'>
            <column caption='Selected Sales' datatype='real' name='[Calculation_3087639814391980038]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Sub-Category] = [Parameters].[Sub-Category Parameter] THEN [Sales]&#10;ELSE 0&#10;END' />
            </column>
            <column aggregation='Attribute' caption='Sales of Selected' datatype='real' name='[Calculation_3087639814393270279]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ EXCLUDE [Sub-Category] : SUM([Calculation_3087639814391980038])}' />
            </column>
            <column caption='Difference from Selected' datatype='real' name='[Calculation_3087639814394634248]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales]) - sum([Calculation_3087639814393270279])' />
            </column>
            <column caption='Difference fr Selected(fixed)' datatype='real' name='[Calculation_3087639814396080137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED : SUM([Calculation_3087639814391980038]) }' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3087639814396080137]' derivation='Sum' name='[sum:Calculation_3087639814396080137:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3087639814394634248]' derivation='User' name='[usr:Calculation_3087639814394634248:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[usr:Calculation_3087639814394634248:qk]' num-steps='5' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#00fdff</color>
                <color>#16f9fb</color>
                <color>#2df6f8</color>
                <color>#42f3f4</color>
                <color>#57eff1</color>
                <color>#6ceced</color>
                <color>#7fe9ea</color>
                <color>#92e6e6</color>
                <color>#a5e2e3</color>
                <color>#b7dfdf</color>
                <color>#c8dcdc</color>
                <color>#d9d9d9</color>
                <color>#d2c2ca</color>
                <color>#ccadbb</color>
                <color>#c698ad</color>
                <color>#bf84a0</color>
                <color>#b97293</color>
                <color>#b36087</color>
                <color>#ad507b</color>
                <color>#a6406f</color>
                <color>#a03165</color>
                <color>#9a235a</color>
                <color>#941751</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[usr:Calculation_3087639814394634248:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[usr:Calculation_3087639814394634248:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[usr:Calculation_3087639814394634248:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Calculation_3087639814396080137:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[usr:Calculation_3087639814394634248:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Sub-Category:nk]</rows>
        <cols>([federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[usr:Calculation_3087639814394634248:qk] + [federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Calculation_3087639814396080137:qk])</cols>
      </table>
      <simple-id uuid='{6175716F-6837-4A7F-ADDE-5A66625B5657}' />
    </worksheet>
    <worksheet name='FIXED'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample_Superstore)' name='federated.0lcievn1yr3erk0zj4e7r1lfzuzm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0lcievn1yr3erk0zj4e7r1lfzuzm'>
            <column caption='Profit per Country(fixed)' datatype='real' name='[Calculation_3087639814381973508]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED([Country/Region]) : SUM([Profit]) }' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3087639814381973508]' derivation='Sum' name='[sum:Calculation_3087639814381973508:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)]' field-type='quantitative' max='-5935840.8942238893' min='-15825678.070420919' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Latitude (generated)]' field-type='quantitative' max='5346922.5747165512' min='2987955.8680357938' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)]' field-type='quantitative' max='-10814033.023985405' min='-12647255.680967607' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Country/Region:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:State:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Calculation_3087639814381973508:qk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Country/Region:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:State:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Profit:qk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Country/Region:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:State:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Latitude (generated)]</rows>
        <cols>([federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)] + [federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{70E473E3-CA8B-4BA8-9A9A-3D90639E6823}' />
    </worksheet>
    <worksheet name='INCLUDE'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample_Superstore)' name='federated.0lcievn1yr3erk0zj4e7r1lfzuzm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0lcievn1yr3erk0zj4e7r1lfzuzm'>
            <column caption='Profit per City (incl)' datatype='real' name='[Calculation_3087639814372765696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [City] : SUM([Profit])  }' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_3087639814372765696]' derivation='Avg' name='[avg:Calculation_3087639814372765696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)]' field-type='quantitative' max='-9878082.5956758484' min='-11788790.5679553' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Latitude (generated)]' field-type='quantitative' max='6554517.9019301338' min='4087641.5124180187' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Country/Region:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[avg:Calculation_3087639814372765696:qk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Country/Region:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:State:nk]' />
              <geometry column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[avg:Profit:qk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Country/Region:nk]' />
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:State:nk]' />
              <geometry column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Latitude (generated)]</rows>
        <cols>([federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)] + [federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{F2898564-CFC3-4423-9671-75C891FACAAA}' />
    </worksheet>
    <worksheet name='Include'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample_Superstore)' name='federated.0lcievn1yr3erk0zj4e7r1lfzuzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0lcievn1yr3erk0zj4e7r1lfzuzm'>
            <column caption='Sales per Customer(incl)' datatype='real' name='[Calculation_3087639814377119745]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE([Customer Name]) : SUM([Sales])}' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3087639814377119745]' derivation='Max' name='[max:Calculation_3087639814377119745:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Max' name='[max:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Region:nk]' direction='DESC' using='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[max:Sales:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[max:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[max:Calculation_3087639814377119745:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk] + ([federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[max:Sales:qk] + [federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[max:Calculation_3087639814377119745:qk]))</rows>
        <cols>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{30E3DB13-6E6C-4D79-8FFF-BDBB566E08C0}' />
    </worksheet>
    <worksheet name='Reference Line'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample_Superstore)' name='federated.0lcievn1yr3erk0zj4e7r1lfzuzm' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FER_Line' datatype='datetime' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2022-07-18 20:29:22#'>
              <calculation class='tableau' formula='#2022-07-18 20:29:22#' />
            </column>
            <column caption='Ref_Line2' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='100000.'>
              <calculation class='tableau' formula='100000.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lcievn1yr3erk0zj4e7r1lfzuzm'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#e6e6e6' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[tmn:Order Date:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='automatic' scope='per-table' tooltip='&lt;Value&gt;' tooltip-type='custom' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <reference-line axis-column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]' z-order='2' />
            <reference-line axis-column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-table' value-column='[Parameters].[Parameter 3]' z-order='3' />
          </pane>
        </panes>
        <rows>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]</rows>
        <cols>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{1FA3783B-49C9-4E9B-8814-FFCADE5C6DDF}' />
    </worksheet>
    <worksheet name='Totals'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample_Superstore)' name='federated.0lcievn1yr3erk0zj4e7r1lfzuzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0lcievn1yr3erk0zj4e7r1lfzuzm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Category:nk] / [federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Sub-Category:nk])</rows>
        <cols />
        <subtotals>
          <column>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Category:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{0F797E8A-CB50-446E-9B40-E4D4C69E2703}' />
    </worksheet>
    <worksheet name='Trend Line'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample_Superstore)' name='federated.0lcievn1yr3erk0zj4e7r1lfzuzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0lcievn1yr3erk0zj4e7r1lfzuzm'>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Order ID:nk]' />
            </encodings>
            <trendline degree='2' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
          </pane>
        </panes>
        <rows>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Profit:qk]</rows>
        <cols>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{DC8FE593-BCEA-45BF-B09D-060EC21A4DB1}' />
    </worksheet>
    <worksheet name='fixed'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample_Superstore)' name='federated.0lcievn1yr3erk0zj4e7r1lfzuzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0lcievn1yr3erk0zj4e7r1lfzuzm'>
            <column caption='Grand Total(fixed)' datatype='real' name='[Calculation_3087639814387834885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED  : SUM([Sales]) }' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3087639814387834885]' derivation='Sum' name='[sum:Calculation_3087639814387834885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Calculation_3087639814387834885:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Calculation_3087639814387834885:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Sub-Category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Fasteners&quot;' />
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Labels&quot;' />
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' />
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Sub-Category:nk]</column>
            <column>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Category:nk]</rows>
        <cols>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EDD1A588-C97F-4D17-9ADF-9F1BD3A44F85}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Totals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Category:nk]</field>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44324E01-6F4D-44D4-A629-19318DE1D1CD}' />
    </window>
    <window class='worksheet' name='Constant Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9085B697-AAF2-4D90-82FC-1DDD014CB4AE}' />
    </window>
    <window class='worksheet' name='Clustering'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Category:nk]</field>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F986360-AF78-4D0A-9453-8A3FD14AEFAC}' />
    </window>
    <window class='worksheet' name='Reference Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97113E0E-FC76-45AA-80DC-BDB38A9F789F}' />
    </window>
    <window class='worksheet' name='Trend Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Order ID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B53B8D11-F555-4C18-8D03-AF99CEB26170}' />
    </window>
    <window class='worksheet' name='INCLUDE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[avg:Profit:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[avg:Calculation_3087639814372765696:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[avg:Calculation_3087639814372765696:qk]</field>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[avg:Profit:qk]</field>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0831FCAF-A93D-4B91-A06B-8C017796B3C4}' />
    </window>
    <window class='worksheet' name='Include'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5AE41828-91BE-422A-BC3A-141597619067}' />
    </window>
    <window class='worksheet' name='EXCLUDE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[usr:Calculation_3087639814380429315:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Country/Region:nk]</field>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[usr:Calculation_3087639814380429315:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1B85CD2-2097-4E44-8AE6-4D483A9F1C15}' />
    </window>
    <window class='worksheet' name='FIXED'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Calculation_3087639814381973508:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E528E028-CBE1-4095-A1FF-6B6147EA68FB}' />
    </window>
    <window class='worksheet' name='fixed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Sub-Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C1C9E0E-6172-44E5-A1D1-51922B2F1E42}' />
    </window>
    <window class='worksheet' name='Examp-1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Sub-Category Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C5A572C-A2C5-4D08-BBFF-15AE56887110}' />
    </window>
    <window class='worksheet' maximized='true' name='Examp-1()'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Sub-Category Parameter]' type='parameter' />
            <card pane-specification-id='6' param='[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[usr:Calculation_3087639814394634248:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lcievn1yr3erk0zj4e7r1lfzuzm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D7D8B9F-2E55-400B-BA9F-3E72AE6D3168}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Clustering' width='192'>
      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
      zjSGAAzONP8fWxpxOhdTG9gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Constant Line' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='EXCLUDE' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Examp-1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Examp-1()' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='FIXED' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='INCLUDE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Include' width='192'>
      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
      GCv/Az+3B/08r6/lAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Reference Line' width='192'>
      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
      2tvTkecAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Totals' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trend Line' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='124' name='fixed' width='192'>
      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
      FxcXPv/8c0EjEBkZyc6dO5UUfNUkJiYyb948QehSk/rsXLlyhbNnz7Jz506h01O3rGqjHODf
      //43ly9fZunSpbz++utERkayYcMGbGxsePfdd4Gq1Iqenp6Cwj8+Pp6MjAwCAwOxs7MDYM2a
      NS+kt16xYgUGBgZs3rwZfX19zp8/T2ZmZqPtqouXl9czh2r/FYmJicHa2ho7OzuSk5ORSCS4
      uLgAYGFhQbdu3YiNjaV37944OzsrXVtWVlanJDIpKalOXUZ9dg4cOMA//vEPpWdI3XD753aA
      wsJCjh07xuTJk4Ue1tPTk+vXrxMaGiqEsebn5xMWFsbp06dxc3Pj119/BWDZsmVoa2uzdu1a
      QkJCsLe35+OPPwbg5MmTBAcHk5mZiaurK35+fuTn57Nq1SouXryIhYUF33zzTa2eIjk5mVGj
      RvHmm28CYG9vL5w7efIksbGxQs9z/Phxrl69yty5c4mJieHQoUNYWloSHR2NjY0NPj4+2Nvb
      13vuaU6fPk1SUpIQ1nvz5k3Wr1/PkydPcHZ2Zt68eZiZmZGbm8u6deu4e/cu+vr6uLu7M3ny
      5Of9Kl45wcHBTJo0CaiaCj390Nra2iKVSoW/09LSSE1N5dy5c1y5coU1a9aotJuYmMjPP/+M
      vr4+77zzTq0CF3XZefLkCYWFhWzcuJGcnBxcXV3p37+/yqjjp3nuRXBycjIVFRVCT19N165d
      SUpKQldXl169eqGtrU3Hjh3p2bMnzs7OuLm5AeDu7k7Pnj3R1tbm0aNHpKamAlXKHz8/P5yd
      nZkxY4aQamPNmjU8fPiQmTNn0q5dOxYsWFBrmHN1dSUgIAB/f38SEhKUzkmlUuLi4oS/MzMz
      +e233wDIzs7mypUr6OnpMXbsWKRSqSCer+/c06SmpvLo0SOgKhp27ty5WFtb4+PjQ0pKCuvX
      rwcgMDCQO3fu8NVXXzF8+HAeP378zJ//H8XNmzcBhB6/qKiolv7X0NCQoqIi4e/g4GBWr15N
      WFgYAwcOxNTUVKXtiRMn0qRJE9LS0li0aBFTp05VWlTXZUcqlRIVFUW7du1wd3cnLCyMbdu2
      qfV+nnsEyMvLA6g1nDVr1oycnBy0tbX57LPP2L59O926daNPnz4AGBsbs3//fgYPHqxyKAwL
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
